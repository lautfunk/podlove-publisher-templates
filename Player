{% if not is_feed() %}
    <!-- Anzeige des Web-Players für die Episode -->
    {{ episode.player }}

    <!-- Stile für Download-Tabelle, Transkript und Kommentar-Link -->
    <style>
        /* Einheitliche, kompakte Schriftart nur für spezifische Elemente im Template-Bereich */
        .container, .container * {
            font-family: Roboto, sans-serif;
            font-size: 16px;
            color: #333;
        }

        /* Allgemeine Stile */
        .container {
            width: 100%;
            max-width: 600px;
            margin: 20px 0;
            border: 1px solid #ddd;
            border-radius: 5px;
            background-color: #fff;
            padding: 15px;
        }

        .section {
            margin-bottom: 20px; /* Abstand zwischen den Abschnitten */
        }

        /* Download-Tabelle */
        .episode-download-table {
            width: 100%;
            border-collapse: collapse;
            margin: 0;
        }

        .episode-download-table th, .episode-download-table td {
            padding: 10px;
            border-bottom: 1px solid #ddd;
            text-align: left;
        }

        .episode-download-table th {
            background-color: #e0e0e0;
            font-weight: bold;
        }

        .episode-download-table .format-column {
            width: 40%;
            text-align: left;
        }

        .episode-download-table .file-size-column {
            width: 20%;
            text-align: center;
            font-size: 0.9em;
            color: #666;
        }

        .episode-download-table .download-column {
            width: 40%;
            text-align: center;
        }

        .episode-download-table tr:nth-of-type(even) {
            background-color: #f9f9f9;
        }

        .episode-download-table tr:hover {
            background-color: #e0e0e0;
        }

        .download-button {
            display: inline-block;
            background-color: #cccccc;
            color: #333333;
            padding: 8px 16px;
            border-radius: 5px;
            font-weight: bold;
            text-decoration: none;
            transition: background-color 0.3s ease, box-shadow 0.3s ease;
            white-space: nowrap;
        }

        .download-button:hover {
            background-color: #bbbbbb;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        /* Kommentar-Button */
        .comment-button {
            display: inline-block;
            background-color: #cccccc;
            color: #333;
            padding: 10px 20px;
            border-radius: 20px;
            font-weight: bold;
            text-decoration: none;
            margin-top: 20px;
            transition: background-color 0.3s ease;
        }

        .comment-button:hover {
            background-color: #bbbbbb;
        }

        /* Transkript-Tabelle */
        .ts-table-container {
            max-height: 600px;
            overflow-y: auto;
            border: 1px solid #ddd;
            margin-top: 10px;
            margin-bottom: 20px; /* Abstand unter der Transkript-Tabelle */
        }

        .ts-table {
            width: 100%;
            border-collapse: collapse;
        }

        .ts-table th, .ts-table td {
            padding: 8px;
            border: 1px solid #ddd;
            vertical-align: middle;
            text-align: left;
        }

        .ts-table th {
            background-color: #e0e0e0;
            font-weight: bold;
        }

        .ts-table tr:nth-of-type(even) {
            background-color: #f9f9f9;
        }

        .ts-table tr:hover {
            background-color: #e0e0e0;
        }

        .ts-speaker {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            font-size: 1em;
            text-align: center;
        }

        .ts-speaker img {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            margin-bottom: 5px;
        }

        .ts-time {
            font-size: 0.9em;
            color: #666;
            display: block;
            margin-bottom: 5px;
        }

        .ts-content {
            font-size: 1em;
            line-height: 1.4;
        }

        /* Transkript-Button */
        .toggle-transcript-button {
            padding: 10px 20px;
            font-size: 1em;
            cursor: pointer;
            border: none;
            background-color: #cccccc;
            color: #333;
            border-radius: 20px;
            margin-top: 10px;
            text-transform: none; /* Verhindert Großschreibung */
        }

        .toggle-transcript-button:hover {
            background-color: #bbbbbb;
        }
    </style>

    <!-- Download-Tabelle -->
    {% if episode.files|length > 0 %}
    <div class="container section">
        <table class="episode-download-table">
            <thead>
                <tr>
                    <th class="format-column">Format</th>
                    <th class="file-size-column">Größe</th>
                    <th class="download-column">Download</th>
                </tr>
            </thead>
            <tbody>
                {% for file in episode.files %}
                    {% set asset = file.asset %}
                    {% if asset.downloadable %}
                        <tr>
                            <td class="format-column">{{ asset.title }}</td>
                            <td class="file-size-column">{{ file.size|formatBytes }}</td>
                            <td class="download-column">
                                <a href="{{ file.publicUrl("download", "buttonlist") }}" class="download-button">Download</a>
                            </td>
                        </tr>
                    {% endif %}
                {% else %}
                    <!-- Fallback, falls keine downloadbaren Dateien vorhanden sind -->
                    <tr>
                        <td colspan="3" style="text-align: center; padding: 10px; color: #666;">Keine Dateien zum Download verfügbar</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
    {% endif %}

    <!-- Kommentar-Link als Button -->
    <div class="section">
        <a href="{{ episode.url }}#comments" class="comment-button">Schreibe einen Kommentar</a>
    </div>

    <!-- Transkript-Button und -Tabelle -->
    {% if episode.transcript is not empty %}
        <div class="section">
            <button id="toggle-transcript" onclick="toggleTranscript()" class="toggle-transcript-button">
                Für das Transkript hier klicken
            </button>

            <div id="transcript-container" class="ts-table-container" style="display: none;">
                <table class="ts-table">
                    <thead>
                        <tr>
                            {% if episode.transcript|first.contributor is not null %}
                                <th class="ts-speaker-column">Sprecher</th>
                                <th class="ts-transcript-column">Transkript</th>
                            {% else %}
                                <th colspan="2">Transkript</th>
                            {% endif %}
                        </tr>
                    </thead>
                    <tbody>
                        {% for group in episode.transcript %}
                            {% if group.contributor is not null %}
                                {% for line in group.items %}
                                    <tr>
                                        <td class="ts-speaker">
                                            {% if group.contributor.avatar is not null %}
                                                {{ group.contributor.avatar.html({width: 50, height: 50, alt: group.contributor.name}) }}
                                            {% endif %}
                                            <strong>{{ group.contributor.name }}</strong>
                                        </td>
                                        <td>
                                            <span class="ts-time">{{ line.start }} &ndash; {{ line.end }}</span>
                                            <div class="ts-content">{{ line.content }}</div>
                                        </td>
                                    </tr>
                                {% endfor %}
                            {% else %}
                                {% for line in group.items %}
                                    <tr>
                                        <td colspan="2">
                                            <span class="ts-time">{{ line.start }} &ndash; {{ line.end }}</span>
                                            <div class="ts-content">{{ line.content }}</div>
                                        </td>
                                    </tr>
                                {% endfor %}
                            {% endif %}
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>

        <script type="text/javascript">
            function toggleTranscript() {
                const container = document.getElementById("transcript-container");
                const button = document.getElementById("toggle-transcript");
                if (container.style.display === "none") {
                    container.style.display = "block";
                    button.textContent = "Transkript ausblenden";
                } else {
                    container.style.display = "none";
                    button.textContent = "Für das Transkript hier klicken";
                }
            }
        </script>
    {% else %}
        <p class="section">Es ist kein Transkript für diese Episode verfügbar.</p>
    {% endif %}
{% endif %}
